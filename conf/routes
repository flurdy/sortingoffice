# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                     controllers.Application.index
GET     /about.html           controllers.Application.about
GET     /contact.html         controllers.Application.contact
GET     /db/:db/              controllers.Application.connectionIndex(db: String)

GET     /db/:db/domain               controllers.DomainController.domain(db: String)
GET     /db/:db/domain/add           controllers.DomainController.viewAdd(db: String)
POST    /db/:db/domain               controllers.DomainController.add(db: String)
GET     /db/:db/domain/:domain/remove controllers.DomainController.viewRemove(db: String, domain: String)
POST    /db/:db/domain/:domain/remove controllers.DomainController.remove(db: String, domain: String)
GET     /db/:db/domain/:domain/      controllers.DomainController.details(db: String, domain: String)
POST    /db/:db/domain/:domain/disable controllers.DomainController.disable(db: String, domain: String)
POST    /db/:db/domain/:domain/enable controllers.DomainController.enable(db: String, domain: String)
POST    /db/:db/domain/:domain/backup/disable controllers.DomainController.disableBackup(db: String, domain: String)
POST    /db/:db/domain/:domain/backup/enable controllers.DomainController.enableBackup(db: String, domain: String)

GET     /db/:db/domain/backup/add    controllers.DomainController.viewAddBackup(db: String)
POST    /db/:db/domain/backup        controllers.DomainController.addBackup(db: String)

GET     /db/:db/alias                controllers.AliasController.alias(db: String)
GET     /db/:db/domain/:domain/alias/add controllers.AliasController.viewAdd(db: String, domain: String)
GET     /db/:db/domain/:domain/alias/add/catchall controllers.AliasController.viewAddCatchAll(db: String, domain: String)
POST    /db/:db/domain/:domain/alias/returnUrl/:returnUrl controllers.AliasController.add(db: String, domain: String, returnUrl: String)
GET     /db/:db/alias/catchall       controllers.AliasController.catchAll(db: String)
GET     /db/:db/alias/common         controllers.AliasController.common(db: String)
GET     /db/:db/alias/cross          controllers.AliasController.crossDomain(db: String)
GET     /db/:db/alias/orphan         controllers.AliasController.orphan(db: String)
POST    /db/:db/alias/:email/disable controllers.AliasController.disableAlias(db: String, email: String)
POST    /db/:db/domain/:domain/alias/:email/disable/returnUrl/:returnUrl controllers.AliasController.disable(db: String, domain: String, email: String, returnUrl: String)
POST    /db/:db/domain/:domain/alias/:email/enable/returnUrl/:returnUrl  controllers.AliasController.enable(db: String, domain: String, email: String, returnUrl: String)
POST    /db/:db/alias/:email/remove  controllers.AliasController.removeAlias(db: String, email: String)
POST    /db/:db/domain/:domain/alias/:email/remove/returnUrl/:returnUrl  controllers.AliasController.remove(db: String, domain: String, email: String, returnUrl: String)

POST    /db/:db/relay/:recipient/disable controllers.RelayController.disableRelay(db: String, recipient: String)
POST    /db/:db/domain/:domain/relay/:recipient/disable/returnUrl/:returnUrl controllers.RelayController.disable(db: String, domain: String, recipient: String, returnUrl: String)
POST    /db/:db/domain/:domain/relay/:recipient/enable/returnUrl/:returnUrl controllers.RelayController.enable(db: String, domain: String, recipient: String, returnUrl: String)
GET     /db/:db/domain/:domain/relay/add controllers.RelayController.viewAdd(db: String, domain: String)
GET     /db/:db/domain/:domain/relay/add/catchall controllers.RelayController.viewAddCatchAll(db: String, domain: String)
POST    /db/:db/domain/:domain/relay     controllers.RelayController.add(db: String, domain: String)
POST    /db/:db/domain/:domain/relay/:recipient/remove/returnUrl/:returnUrl controllers.RelayController.remove(db: String, domain: String, recipient: String, returnUrl: String)
POST    /db/:db/relay/:recipient/remove  controllers.RelayController.removeRelay(db: String, recipient: String)

GET     /db/:db/user                 controllers.UserController.user(db: String)
GET     /db/:db/user/:email/edit     controllers.UserController.edituser(db: String, email: String)
POST    /db/:db/domain/:domain/user/:email/disable/returnUrl/:returnUrl  controllers.UserController.disable(db: String, domain: String, email: String, returnUrl: String)
POST    /db/:db/domain/:domain/user/:email/enable/returnUrl/:returnUrl   controllers.UserController.enable(db: String, domain: String, email: String, returnUrl: String)
POST    /db/:db/user/:email/disable/returnUrl/:returnUrl  controllers.UserController.disableUser(db: String, email: String, returnUrl: String)
POST    /db/:db/user/:email/enable/returnUrl/:returnUrl   controllers.UserController.enableUser(db: String, email: String, returnUrl: String)
POST    /db/:db/user/:email/remove/returnUrl/:returnUrl   controllers.UserController.remove(db: String, email: String, returnUrl: String)
POST    /db/:db/user/:email/resetpassword controllers.UserController.resetPassword(db: String, email: String)
GET     /db/:db/user/add  			    controllers.UserController.viewAdd(db: String)
GET     /db/:db/domain/:domain/user/add  controllers.UserController.viewAddWithDomain(db: String, domain: String)
POST    /db/:db/user 				    controllers.UserController.add(db: String)
POST    /db/:db/domain/:domain/user  controllers.UserController.addWithDomain(db: String, domain: String)

GET     /login.html    controllers.Application.viewLogin
POST    /login         controllers.Application.login
GET     /logout        controllers.Application.logout
GET     /register.html controllers.Application.viewRegister
POST    /register      controllers.Application.register



# Map static webjar resources
GET     /webjars/*file        controllers.WebJarAssets.at(file)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file         controllers.Assets.at(path="/public", file)

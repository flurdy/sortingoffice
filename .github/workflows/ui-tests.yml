name: UI Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  DOCKER_HOST: unix:///var/run/docker.sock

jobs:
  ui-tests:
    name: UI Tests (Headless)
    runs-on: ubuntu-latest
    
    services:
      # MySQL Database
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: sortingoffice_test
          MYSQL_USER: sortingoffice
          MYSQL_PASSWORD: sortingoffice
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Start Docker daemon
      run: |
        sudo systemctl start docker
        sudo systemctl status docker

    - name: Verify Docker is working
      run: |
        docker --version
        docker ps
        sudo usermod -a -G docker $USER || true

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install MySQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y default-mysql-client

    - name: Install Diesel CLI
      run: cargo install diesel_cli --no-default-features --features mysql

    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
          sleep 1
        done

    - name: Run database migrations
      env:
        DATABASE_URL: mysql://sortingoffice:sortingoffice@127.0.0.1:3306/sortingoffice_test
      run: diesel migration run

    - name: Build application
      run: cargo build --release

    - name: Start application
      env:
        DATABASE_URL: mysql://sortingoffice:sortingoffice@127.0.0.1:3306/sortingoffice_test
        RUST_LOG: info
        HOST: 0.0.0.0
        PORT: 3000
      run: |
        nohup cargo run --release > app.log 2>&1 &
        echo $! > app.pid
        sleep 5

    - name: Wait for application
      run: |
        for i in {1..30}; do
          if curl -s http://localhost:3000/ > /dev/null; then
            echo "Application is ready"
            break
          fi
          echo "Waiting for application... ($i/30)"
          sleep 2
        done

    - name: Run headless UI tests
      env:
        RUST_TEST_THREADS: 1
        RUST_LOG: info
      run: |
        cargo test --test ui_headless -- --nocapture --test-threads=1

    - name: Stop application
      if: always()
      run: |
        if [ -f app.pid ]; then
          kill $(cat app.pid) || true
          rm app.pid
        fi

    - name: Upload test artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ui-test-screenshots
        path: |
          screenshots/
          test-results/
          app.log
        retention-days: 7 

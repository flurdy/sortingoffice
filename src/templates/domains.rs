use crate::models::{Domain, DomainForm, Backup, PaginatedResult};
use askama::Template;

#[derive(Template)]
#[template(path = "domains/list.html", escape = "html")]
pub struct DomainsListTemplate<'a> {
    pub title: &'a str,
    pub description: &'a str,
    pub add_domain: &'a str,
    pub table_header_domain: &'a str,
    pub table_header_transport: &'a str,
    pub table_header_enabled: &'a str,
    pub table_header_actions: &'a str,
    pub status_active: &'a str,
    pub status_inactive: &'a str,
    pub action_view: &'a str,
    pub action_enable: &'a str,
    pub action_disable: &'a str,
    pub empty_title: &'a str,
    pub empty_description: &'a str,
    pub domains: &'a [Domain],
    pub pagination: &'a PaginatedResult<Domain>,
    pub page_range: &'a [i64],
    pub max_item: i64,
    pub backups_title: &'a str,
    pub backups_description: &'a str,
    pub add_backup: &'a str,
    pub backups_table_header_domain: &'a str,
    pub backups_table_header_transport: &'a str,
    pub backups_table_header_enabled: &'a str,
    pub backups_table_header_actions: &'a str,
    pub backups: &'a [Backup],
    pub backups_view: &'a str,
    pub backups_enable: &'a str,
    pub backups_disable: &'a str,
    pub backups_empty_no_backup_servers: &'a str,
    pub backups_empty_get_started: &'a str,
}

#[derive(Template)]
#[template(path = "domains/show.html", escape = "html")]
pub struct DomainShowTemplate<'a> {
    pub title: &'a str,
    pub domain: Domain,
    pub view_edit_settings: &'a str,
    pub back_to_domains: &'a str,
    pub domain_information: &'a str,
    pub domain_details: &'a str,
    pub domain_name: &'a str,
    pub transport: &'a str,
    pub status: &'a str,
    pub status_active: &'a str,
    pub status_inactive: &'a str,
    pub created: &'a str,
    pub modified: &'a str,
    pub edit_domain_button: &'a str,
    pub enable_domain: &'a str,
    pub disable_domain: &'a str,
    pub delete_domain: &'a str,
    pub delete_confirm: &'a str,
    pub alias_report: Option<crate::models::DomainAliasReport>,
    pub catch_all_header: &'a str,
    pub destination_header: &'a str,
    pub required_aliases_header: &'a str,
    pub missing_aliases_header: &'a str,
    pub missing_required_alias_header: &'a str,
    pub missing_common_aliases_header: &'a str,
    pub mail_header: &'a str,
    pub status_header: &'a str,
    pub enabled_header: &'a str,
    pub actions_header: &'a str,
    pub no_required_aliases: &'a str,
    pub no_missing_aliases: &'a str,
    pub alias_report_title: &'a str,
    pub alias_report_description: &'a str,
    pub existing_aliases_header: &'a str,
    pub add_missing_required_alias_button: &'a str,
    pub add_common_alias_button: &'a str,
    pub add_catch_all_button: &'a str,
    pub add_alias_button: &'a str,
    pub no_catch_all_message: &'a str,
    pub existing_aliases: &'a [crate::models::Alias],
    pub action_view: &'a str,
    pub enable_alias: &'a str,
    pub disable_alias: &'a str,
}

#[derive(Template)]
#[template(path = "domains/form.html", escape = "html")]
pub struct DomainFormTemplate<'a> {
    pub title: &'a str,
    pub domain: Option<Domain>,
    pub form: DomainForm,
    pub error: Option<String>,
    pub form_error: &'a str,
    pub form_domain: &'a str,
    pub form_transport: &'a str,
    pub form_active: &'a str,
    pub form_cancel: &'a str,
    pub form_create_domain: &'a str,
    pub form_update_domain: &'a str,
    pub form_placeholder_domain: &'a str,
    pub form_placeholder_transport: &'a str,
    pub form_tooltip_domain: &'a str,
    pub form_tooltip_transport: &'a str,
    pub form_tooltip_enable: &'a str,
}
